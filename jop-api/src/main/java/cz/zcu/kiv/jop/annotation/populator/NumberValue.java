package cz.zcu.kiv.jop.annotation.populator;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import cz.zcu.kiv.jop.annotation.defaults.DefaultNumber;

/**
 * Annotation for populator of number values. This annotation can be used as
 * limiting conditions for populating of generated values generated by numeric
 * value generator. Also it should be used for determination of target numeric
 * type in case that property is declared as abstract (or interface).
 *
 * @author Mr.FrAnTA
 * @since 1.0
 */
@PopulatorAnnotation
@Documented
@Target({ElementType.FIELD, ElementType.PARAMETER})
@Retention(RetentionPolicy.RUNTIME)
public @interface NumberValue {

  /**
   * Optimal parameter for minimal value which can be populated into annotated
   * property. Value of minimum has to be lesser than or equals to
   * {@link #max() maximum}. The default value is
   * {@link Double#NEGATIVE_INFINITY}.
   */
  public double min() default Double.NEGATIVE_INFINITY;

  /**
   * Optimal parameter for maximal value which can be populated into annotated
   * property. Value of maximum has to be greater than or equals to
   * {@link #min() minimum}. The default value is
   * {@link Double#POSITIVE_INFINITY}.
   */
  public double max() default Double.POSITIVE_INFINITY;

  /**
   * Optional parameter which can specify the target number class populated into
   * annotated property. This annotation is useful in case that property is
   * declared by abstract numeric type.
   */
  public Class<? extends Number> target() default DefaultNumber.class;

}
